// Generated by Dagger (https://dagger.dev).
package com.example.template.di;

import com.example.template.data.datasource.cities.CitiesLocalDataSource;
import com.example.template.data.locale.dao.CityDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_ProvideCityLocalDataSourceFactory implements Factory<CitiesLocalDataSource> {
  private final DataSourceModule module;

  private final Provider<CityDao> cityDaoProvider;

  public DataSourceModule_ProvideCityLocalDataSourceFactory(DataSourceModule module,
      Provider<CityDao> cityDaoProvider) {
    this.module = module;
    this.cityDaoProvider = cityDaoProvider;
  }

  @Override
  public CitiesLocalDataSource get() {
    return provideCityLocalDataSource(module, cityDaoProvider.get());
  }

  public static DataSourceModule_ProvideCityLocalDataSourceFactory create(DataSourceModule module,
      Provider<CityDao> cityDaoProvider) {
    return new DataSourceModule_ProvideCityLocalDataSourceFactory(module, cityDaoProvider);
  }

  public static CitiesLocalDataSource provideCityLocalDataSource(DataSourceModule instance,
      CityDao cityDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideCityLocalDataSource(cityDao));
  }
}
