// Generated by Dagger (https://dagger.dev).
package com.example.template.di;

import com.example.template.data.locale.MDatabase;
import com.example.template.data.locale.dao.CityDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideCityDaoFactory implements Factory<CityDao> {
  private final DatabaseModule module;

  private final Provider<MDatabase> mDatabaseProvider;

  public DatabaseModule_ProvideCityDaoFactory(DatabaseModule module,
      Provider<MDatabase> mDatabaseProvider) {
    this.module = module;
    this.mDatabaseProvider = mDatabaseProvider;
  }

  @Override
  public CityDao get() {
    return provideCityDao(module, mDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideCityDaoFactory create(DatabaseModule module,
      Provider<MDatabase> mDatabaseProvider) {
    return new DatabaseModule_ProvideCityDaoFactory(module, mDatabaseProvider);
  }

  public static CityDao provideCityDao(DatabaseModule instance, MDatabase mDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideCityDao(mDatabase));
  }
}
