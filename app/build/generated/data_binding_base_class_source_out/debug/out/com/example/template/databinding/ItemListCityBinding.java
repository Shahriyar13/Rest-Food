// Generated by data binding compiler. Do not edit!
package com.example.template.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.template.R;
import com.example.template.domain.entity.popular.CityEntity;
import com.example.template.ui.home.CityListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemListCityBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView description;

  @NonNull
  public final AppCompatImageView image;

  @NonNull
  public final AppCompatTextView title;

  @Bindable
  protected CityEntity mCity;

  @Bindable
  protected CityListener mClickListener;

  protected ItemListCityBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView description, AppCompatImageView image, AppCompatTextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.description = description;
    this.image = image;
    this.title = title;
  }

  public abstract void setCity(@Nullable CityEntity city);

  @Nullable
  public CityEntity getCity() {
    return mCity;
  }

  public abstract void setClickListener(@Nullable CityListener clickListener);

  @Nullable
  public CityListener getClickListener() {
    return mClickListener;
  }

  @NonNull
  public static ItemListCityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_list_city, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemListCityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemListCityBinding>inflateInternal(inflater, R.layout.item_list_city, root, attachToRoot, component);
  }

  @NonNull
  public static ItemListCityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_list_city, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemListCityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemListCityBinding>inflateInternal(inflater, R.layout.item_list_city, null, false, component);
  }

  public static ItemListCityBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemListCityBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemListCityBinding)bind(component, view, R.layout.item_list_city);
  }
}
